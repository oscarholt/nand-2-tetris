// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:
    // First we want to set up load or increment
    Or(a=load, b=inc, out=loadOrIncrement);
    // Now make loadOrIncrementOrReset
    Or(a=loadOrIncrement, b=reset, out=loadOrIncrementOrReset);
    // Now let's Mux in either the incremented output from last time or the input based on inc, this selector needs to also only do if inc is 1 and load is 0
    Not(in=load, out=notLoad);
    And(a=inc, b=notLoad, out=incAndNotLoad);
    Mux16(a=in, b=incOut, sel=incAndNotLoad, out=inMuxIncOut);
    // We want to put the logic for reset in here
    Mux16(a=inMuxIncOut, b=false, sel=reset, out=iMioMuxFalse);
    // Now we can set up a register
    Register(in=iMioMuxFalse, load=loadOrIncrementOrReset, out=toIncrement, out=out);
    // Then we want to increment incOut
    Inc16(in=toIncrement, out=incOut);
}
